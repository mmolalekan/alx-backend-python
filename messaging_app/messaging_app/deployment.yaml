apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-messaging-app
  labels:
    app: django-messaging-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: django-messaging-app
  template:
    metadata:
      labels:
        app: django-messaging-app
    spec:
      containers:
      - name: django-app
        image: django-messaging-app:latest
        ports:
        - containerPort: 8000
        env:
        - name: DB_HOST
          value: "mysql-service"  # This should match your MySQL service name
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: django-secrets
              key: db-name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: django-secrets
              key: db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: django-secrets
              key: db-password
        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: django-secrets
              key: secret-key
        readinessProbe:
          httpGet:
            path: /api/health/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/health/
            port: 8000
          initialDelaySeconds: 45
          periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: django-service
spec:
  selector:
    app: django-messaging-app
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: ClusterIP